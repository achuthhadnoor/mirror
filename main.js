const{app:app,BrowserWindow:BrowserWindow,Tray:Tray,Menu:Menu}=require("electron"),{join:join}=require("path"),{ipcMain:ipcMain}=require("electron"),Store=require("electron-store"),AutoLaunch=require("auto-launch"),gotTheLock=app.requestSingleInstanceLock();gotTheLock||app.quit();let tray,browserWin,isAutolaunch=!0,store=new Store;var _autoLaunch=new AutoLaunch({name:"Mirror",path:"/Applications/Mirror.app"});const createWindow=()=>{browserWin=new BrowserWindow({frame:!1,alwaysOnTop:!0,width:450,height:300,maxWidth:800,maxHeight:800,transparent:!0,fullscreenable:!1,webPreferences:{nodeIntegration:!0,contextIsolation:!1}}),browserWin.setVisibleOnAllWorkspaces(!0,{visibleOnFullScreen:!0}),browserWin.setAlwaysOnTop(!0,"floating",1),browserWin.on("resized",t=>{console.log(browserWin.getBounds())}),browserWin.loadFile("index.html")};function createTray(){tray=new Tray(join(__dirname,"appTemplate.png")),tray.setToolTip("Mirror | Camera preview"),tray.on("click",async()=>{browserWin.isVisible()?await browserWin.webContents.send("asynchronous-message","STOP_VIDEO"):await browserWin.webContents.send("asynchronous-message","SHOW_VIDEO")}),tray.on("right-click",()=>{let template=[{label:"launch on startup",type:"checkbox",checked:isAutolaunch,click:()=>{isAutolaunch=!isAutolaunch,isAutolaunch?_autoLaunch.enable():_autoLaunch.disable(),store.set("mirrorApp",{autolaunch:isAutolaunch})}},{type:"separator"},{role:"quit"}];const menu=Menu.buildFromTemplate(template);tray.popUpContextMenu(menu)})}if(store.get("mirrorApp")){let _store=store.get("mirrorApp");isAutolaunch=_store.autolaunch}else store.set("mirrorApp",{autolaunch:!0});ipcMain.on("Show",()=>{browserWin.show()}),ipcMain.on("Hide",()=>{browserWin.hide()}),app.whenReady().then(()=>{try{createWindow()}catch{app.quit()}createTray(),_autoLaunch.isEnabled().then(isEnabled=>{isEnabled||_autoLaunch.enable()})}),app.dock&&app.dock.hide(),app.on("window-all-closed",(function(){"darwin"!==process.platform&&app.quit()})),ipcMain.on("quit",()=>{app.quit()});